import numpy as np

# TODO 2. N维数组
# TODO 2.1 N维数组的属性
"""
如果说强大而完备的第三方库，赋予了Python独特的魅力，那么N维数组（ndarray）便使得NumPy拥有了灵魂。
在前面的范例中，我们仅以NumPy的一维数组为例介绍了一些函数的应用。
而实际上，在机器学习中，要处理的数组大多数是N维的。
一个N维数组就是一个通用的同类数据容器，也就是说它包含的每个元素数据类型均相同。
每个数组的维度（dimension）都由一个ndim属性来描述。
"""
array1 = np.arange(1, 11)
print(array1.ndim)  # 1

"""
对于N维数组而言，它还有一个重要的属性—shape（数组的形状）。
形状主要用来表征数组每个维度的数量。一维数组的形状就是它的长度，
有时候，一维数组也被称为1D张量[插图]（1D Tensor）
"""
print(array1.shape)  # (10,)
array2 = array1.reshape(2, 5)
print(array2.ndim)  # 2
print(array2.shape)  # (2, 5)
print(array2.size)  # 10

"""
这里需要注意的是，NumPy表示三维数组维度信息的方式和我们通常的认知稍有不同。
比如，我们想创建两个3行5列的数组，它的形状参数为(2, 3, 5)，而不是(3, 5, 2).
通常三维数组也被称为3D张量，以此类推。
"""
array3 = np.arange(30).reshape(2, 3, 5)  # 重构数组为2通道3行5列
print(array3)
"""
[[[ 0  1  2  3  4]
  [ 5  6  7  8  9]
  [10 11 12 13 14]]

 [[15 16 17 18 19]
  [20 21 22 23 24]
  [25 26 27 28 29]]]
"""
